plugins {
    id 'org.springframework.boot' version '2.4.5'
    id 'java'
}

apply plugin: 'io.spring.dependency-management'

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = 11

    repositories {
        mavenCentral()
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    // 모든 모듈에서 사용하는 라이브러리
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'io.springfox:springfox-swagger2:2.6.1'
        implementation 'io.springfox:springfox-swagger-ui:2.6.1'
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testCompileOnly 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }

        implementation 'org.springframework.boot:spring-boot-starter-security'
    }

    test {
        useJUnitPlatform()
    }
}

project(':client-member-service') {
    // common 모듈에만 필요한 라이브러리가 발생하면 이곳에 추가한다.
    dependencies {
        compile project(":entity")
        implementation 'org.modelmapper:modelmapper:2.4.0'
        implementation 'org.mariadb.jdbc:mariadb-java-client'
        testImplementation "org.junit.jupiter:junit-jupiter-api"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
        implementation "io.jsonwebtoken:jjwt:0.2"
        implementation "commons-lang:commons-lang:2.4"
        implementation "com.googlecode.json-simple:json-simple:1.1.1"
        implementation "commons-io:commons-io:2.2"
        implementation "org.apache.httpcomponents:httpcore:4.4.14"

    }
}
